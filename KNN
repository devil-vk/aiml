#import libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
#load iris dataset
from sklearn import metrics
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, confusion_matrix

iris=load_iris()
X=iris.data # features
y=iris.target # target

#print description
print(iris.DESCR)

#split the dataset into train and test data
X_train, X_test, y_train, y_test = train_test_split (X, y, test_size=0.20, random_state =23)
print(iris.data.shape)
print('Training Set', len(X_train))
print('Test Set', len(X_test))

#to train the model
knn=KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train,y_train)

#make prediction on test data, Classify
y_pred=knn.predict(X_test)
print(y_pred)

#compare the accuracy between the predicted and the actual output y_test

print("accuracy=",metrics.accuracy_score(y_pred,y_test))
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

targets ={0:'setosa',1:'versicolor',2:'virginica'}
print(f'ID \t {"Actual":10s} \t\t {"Predicted":10s} \
      \t Correct?')
i=1
for yt,yp in zip (y_test, y_pred):
    correct='yes' if yt==yp else 'no**'

    print(f'{i} \t{targets.get(yt):10s} \t \
          {targets.get(yp):10s} \t {correct}')
    i+=1

